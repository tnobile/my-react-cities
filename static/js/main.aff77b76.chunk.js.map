{"version":3,"sources":["services/CityService.js","components/City/City.js","components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["getData","country","a","fetch","response","ok","message","status","Error","json","content","filter","f","i","City","city","row","admin_name","lng","lat","iso2","capital","population","population_proper","Home","useState","data","setData","setCountry","useEffect","fetchData","result","e","console","log","name","onChange","evt","target","value","map","d","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAEaA,EAAO,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sEACEC,MAHb,+CAGuBF,GADZ,WACfG,EADe,QAELC,GAFK,sBAGTC,EAHS,gCAG0BF,EAASG,QAC5C,IAAIC,MAAMF,GAJD,uBAMCF,EAASK,OANV,cAMfC,EANe,yBAOZA,EAAQC,QAAO,SAACC,EAAGC,GAAJ,OAAUA,EAAI,QAPjB,4CAAH,sD,OCmBLC,EAnBF,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IAClB,OACI,mCACI,+BACI,6BAAKA,EAAM,IACX,6BAAKD,EAAKA,OACV,6BAAKA,EAAKE,aACV,6BAAKF,EAAKG,MACV,6BAAKH,EAAKI,MACV,6BAAKJ,EAAKd,UACV,6BAAKc,EAAKK,OACV,6BAAKL,EAAKM,UACV,6BAAKN,EAAKO,aACV,6BAAKP,EAAKQ,0BC+BXC,EAzCF,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACRC,EADQ,KACFC,EADE,OAEeF,mBAAS,MAFxB,mBAERxB,EAFQ,KAEC2B,EAFD,KAGfC,qBAAU,WAKN,IAAMC,EAAS,uCAAG,4BAAA5B,EAAA,sEACOF,EAAQC,GADf,OACR8B,EADQ,OAEdJ,EAAQI,GAFM,2CAAH,qDAIf,IACID,IACF,MAAOE,GAAKC,QAAQC,IAAR,UAAeF,EAAEG,KAAjB,YAAyBH,EAAE1B,aAC1C,CAACL,IAKJ,OACI,qCACI,gCACI,mDACA,yBAAQkC,KAAK,UAAUC,SARP,SAACC,GACzBT,EAAWS,EAAIC,OAAOC,QAOd,UACI,wBAAQA,MAAM,KAAKJ,KAAK,KAAxB,mBACA,wBAAQI,MAAM,KAAKJ,KAAK,KAAxB,gBACA,wBAAQI,MAAM,KAAKJ,KAAK,KAAxB,yBACA,wBAAQI,MAAM,KAAKJ,KAAK,KAAxB,wBACA,wBAAQI,MAAM,KAAKJ,KAAK,KAAxB,mBACA,wBAAQI,MAAM,KAAKJ,KAAK,KAAxB,qBACA,wBAAQI,MAAM,KAAKJ,KAAK,KAAxB,yBAGR,gCACKT,GAAQA,EAAKc,KAAI,SAACC,EAAG5B,GAAJ,OAAU,cAAC,EAAD,CAAcG,IAAKH,EAAGE,KAAM0B,GAAjB5B,Y,MC5BxC6B,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aff77b76.chunk.js","sourcesContent":["const url = \"https://tnobile.github.io/data-world-cities/\";\n\nexport const getData = async (country) => {\n    var response = await fetch(url+country);\n    if (!response.ok) {\n        const message = `An error has occured: ${response.status}`;\n        throw new Error(message);\n    }\n    var content = await response.json();\n    return content.filter((f, i) => i < 100);\n}\n","//import styles from './City.module.css'\n\nconst City = ({ city, row }) => {\n    return (\n        <>\n            <tr>\n                <td>{row + 1}</td>\n                <td>{city.city}</td>\n                <td>{city.admin_name}</td>\n                <td>{city.lng}</td>\n                <td>{city.lat}</td>\n                <td>{city.country}</td>\n                <td>{city.iso2}</td>\n                <td>{city.capital}</td>\n                <td>{city.population}</td>\n                <td>{city.population_proper}</td>\n            </tr>\n        </>\n    )\n}\n\nexport default City;","import { getData } from '../../services/CityService'\nimport React, { useState, useEffect } from 'react'\nimport City from '../City/City'\n//import styles from './Home.module.css'\n\nconst Home = () => {\n    const [data, setData] = useState([]);\n    const [country, setCountry] = useState(\"gb\")\n    useEffect(() => {\n        // getData().then(d => {\n        //     console.log(\"got\", d);\n        //     setData(d);\n        // }).catch(e => { console.log(\"failed in fetch\", e.message) });\n        const fetchData = async () => {\n            const result = await getData(country);\n            setData(result);\n        }\n        try {\n            fetchData();\n        } catch (e) { console.log(`${e.name}:${e.message}`); }\n    }, [country])\n    const handleCountryChange = (evt) => {\n        setCountry(evt.target.value);\n    }\n\n    return (\n        <>\n            <div>\n                <h1>Country/City Data</h1>\n                <select name='country' onChange={handleCountryChange}>\n                    <option value=\"jp\" name=\"jp\">Japan</option>\n                    <option value=\"gb\" name=\"gb\">UK</option>\n                    <option value=\"ch\" name=\"ch\">Switzerland</option>\n                    <option value=\"ar\" name=\"ar\">Argentinaj</option>\n                    <option value=\"cn\" name=\"cn\">China</option>\n                    <option value=\"de\" name=\"de\">Germany</option>\n                    <option value=\"es\" name=\"es\">Spain</option>\n                </select>\n            </div>\n            <table>\n                {data && data.map((d, i) => <City key={i} row={i} city={d}></City>)}\n            </table>\n        </>\n    )\n}\n\nexport default Home;","import './App.css';\nimport Home from './components/Home/Home';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}